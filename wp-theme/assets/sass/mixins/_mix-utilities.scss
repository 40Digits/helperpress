/* UTILITIES
===================================*/

// These mixins and placeholders will make your development process easier.
// Place any and all utilities here.

// Clear Placeholder
%cf {
	zoom: 1;
	&:before,
	&:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both;
	}
}

// Clear Mixin
@mixin cf {
	zoom: 1;
	&:before,
	&:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both;
	}
}

// Font smoothing for OSX primarily
@mixin font-smoothing {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.004);
}

// Absolute center content
@mixin abs-center {
	margin: auto;
	position: absolute;
	top: 0; left: 0; bottom: 0; right: 0;
}

// Hide something to where it is still accessible on screen readers.
%visuallyhidden {
	margin: -1px;
	padding: 0;
	width: 1px;
	height: 1px;
	overflow: hidden;
	clip: rect(0 0 0 0);
	clip: rect(0, 0, 0, 0);
	position: absolute;
}

//----------------------------------*\
// CROSS BROWSER
//----------------------------------

// Cross-browser alpha transparency
@mixin rgba($color, $alpha) {
	$rgba: rgba($color, $alpha);
	$ie-hex-str: ie-hex-str($rgba);
	background-color: transparent;
	background-color: $rgba;
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str},endColorstr=#{$ie-hex-str});
	zoom: 1;
}

// Cross-browser opacity
@mixin opacity($alpha) {
	-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=$alpha*100)";
	filter: alpha(opacity=$alpha*100);
	-webkit-opacity: $alpha;
	-moz-opacity: $alpha;
	-khtml-opacity: $alpha;
	opacity: $alpha;
}

// Cross-browser background-cover
// ex: @extend %bg-cover
%bg-cover {
	background-repeat: no-repeat;
	background-size: cover;
	-ms-behavior: url(images/backgroundsize.min.htc);
	background-position: center center;
}

// Remove all list styling
%naked-list {
	list-style: none;
	padding: 0;
	margin: 0;
}

// Remove all button styling and reset it to default
%naked-button {
	background: transparent;
	outline: none;
	border: 0;
	cursor: pointer;
	padding: 0;
	margin: 0;
	font-size: 1em;
}

//----------------------------------*\
// CSS ANIMATIONS
//----------------------------------

// Animation Shorthand
// ex: @include animation(keyframe_name, 500ms, linera, 0s, forwards, 1)
@mixin animation($name, $duration, $timing-function, $delay, $direction, $iteration) {
	-webkit-animation: $name $duration $timing-function $delay $direction $iteration;
	-moz-animation: $name $duration $timing-function $delay $direction $iteration;
	-o-animation: $name $duration $timing-function $delay $direction $iteration;
	animation: $name $duration $timing-function $delay $direction $iteration;
}

// Animation Name
@mixin animation-name($name) {
	-webkit-animation-name: $name;
	-moz-animation-name: $name;
	-o-animation-name: $name;
	animation-name: $name;
}

// Animation Duration
@mixin animation-duration($duration) {
	-webkit-animation-duration: $duration;
	-moz-animation-duration: $duration;
	-o-animation-duration: $duration;
	animation-duration: $duration;
}

// Animation Timing Function
@mixin animation-timing-function($timing) {
	-webkit-animation-timing-function: $timing;
	-moz-animation-timing-function: $timing;
	-o-animation-timing-function: $timing;
	animation-timing-function: $timing;
}

// Animation Delay
@mixin animation-delay($delay) {
	-webkit-animation-delay: $delay;
	-moz-animation-delay: $delay;
	-o-animation-delay: $delay;
	animation-delay: $delay;
}

// Animation Iteration
@mixin animation-iteration($iteration) {
	-webkit-animation-iteration-count: $iteration;
	-moz-animation-iteration-count: $iteration;
	-o-animation-iteration-count: $iteration;
	animation-iteration-count: $iteration;
}

// Animation Direction
@mixin animation-direction($animation-direction) {
	-webkit-animation-direction: $animation-direction;
	-moz-animation-direction: $animation-direction;
	-o-animation-direction: $animation-direction;
	animation-direction: $animation-direction;
}

// Animation Fill
@mixin animation-fill($animation-fill) {
	-webkit-animation-fill-mode: $animation-fill;
	-moz-animation-fill-mode: $animation-fill;
	-o-animation-fill-mode: $animation-fill;
	animation-fill-mode: $animation-fill;
}

// Transition Delay
@mixin transition-delay($transition-delay) {
	-webkit-transition-delay: $transition-delay;
	-moz-transition-delay: $transition-delay;
	-o-transition-delay: $transition-delay;
	transition-delay: $transition-delay;
}
